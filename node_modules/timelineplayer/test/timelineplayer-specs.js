$(document).ready(function() {

  module("TimelinePlayer");

  test("constructor", function() {
    var Player = TimelinePlayer; 
    var player = new Player();

    // no args
    deepEqual(new Player, player, 'can instantiate TimelinePlayer when given no args');
    
    // one arg
    deepEqual(new Player([]), player, 'can instantiate TimelinePlayer when given one array');
    deepEqual(new Player(1), player, 'can instantiate TimelinePlayer when given one array that is not an array');

    // two args
    deepEqual(new Player([],function(){}), player, 'can instantiate TimelinePlayer when given one array and one callback');
    deepEqual(new Player([],1), player, 'can instantiate TimelinePlayer when given one array and one callback that is not a function');
  });

  test("play", function() {
    
    var spy = this.spy();
    var player = new TimelinePlayer([[0,[1]],[1000,[2]],[1500,[3]]], spy);

    var clock = this.sandbox.useFakeTimers();

    player.play();
    clock.tick(0);
    equal(spy.callCount, 1);

    clock.tick(999);
    equal(spy.callCount, 1);
    clock.tick(1);
    equal(spy.callCount, 2);

    clock.tick(499);
    equal(spy.callCount, 2);
    clock.tick(1);
    equal(spy.callCount, 3);

    clock.tick(10000);
    equal(spy.callCount, 3);

    clock.restore();

    spy = this.spy();
    player = new TimelinePlayer([[500,[1]]],spy);

    clock = this.sandbox.useFakeTimers();

    player.play();
    clock.tick(0);
    ok(!spy.called);

    clock.tick(499);
    ok(!spy.called);
    clock.tick(1);
    ok(spy.calledOnce);

    clock.restore(); 
  });

  test("stop", function() {
    
    var spy = this.spy();
    var player = new TimelinePlayer([[0,[1]],[1000,[2]],[1500,[3]]], spy);

    var clock = this.sandbox.useFakeTimers();

    player.play();
    clock.tick(0);
    equal(spy.callCount, 1);

    clock.tick(500);
    player.stop();
    clock.tick(300);

    player.play();
    clock.tick(0);
    equal(spy.callCount, 2);

    clock.tick(1000);
    equal(spy.callCount, 3);

    clock.restore();
  });

  test("pause", function() {
    
    var spy = this.spy();
    var player = new TimelinePlayer([[0,[1]],[1000,[2]],[1500,[3]]], spy);

    var clock = this.sandbox.useFakeTimers();

    player.play();
    clock.tick(0);
    equal(spy.callCount, 1);

    clock.tick(500);
    player.pause();
    clock.tick(300);

    player.play();
    clock.tick(0);
    equal(spy.callCount, 1);

    clock.tick(499);
    equal(spy.callCount, 1);
    clock.tick(1);
    equal(spy.callCount, 2);

    clock.restore();
  });

  test("setSpeed", function() {
    
    var spy = this.spy();
    var player = new TimelinePlayer([[0,[1]],[1000,[2]],[1500,[3]],[2000,[4]]], spy);

    var clock = this.sandbox.useFakeTimers();

    player.play();
    clock.tick(0);
    equal(spy.callCount, 1);

    clock.tick(500);
    player.setSpeed(2);

    clock.tick(249);
    equal(spy.callCount, 1);
    clock.tick(1);
    equal(spy.callCount, 2);

    clock.tick(125);
    player.setSpeed(1);

    clock.tick(249);
    equal(spy.callCount, 2);
    clock.tick(1);
    equal(spy.callCount, 3);

    player.setSpeed('a');
    clock.tick(1000);
    equal(spy.callCount, 3, 'should stop playback when set invalid speed');

    clock.restore();
  });

  test("mute/unmute", function() {
    
    var spy = this.spy();
    var player = new TimelinePlayer([[0,[1]],[1000,[2]],[2000,[3]]], spy);

    var clock = this.sandbox.useFakeTimers();

    player.play();
    clock.tick(0);
    equal(spy.callCount, 1);

    clock.tick(500);
    player.mute();

    clock.tick(500);
    clock.tick(1);
    equal(spy.callCount, 1);

    clock.tick(500);
    player.unmute();

    clock.tick(500);
    equal(spy.callCount, 2);

    clock.restore();
  });

  test("global controller", function() {
    
    var spy = this.spy();
    var player1 = new TimelinePlayer([[0,[1]],[1000,[2]],[2000,[3]]], spy);
    var player2 = new TimelinePlayer([[500,[1]],[1500,[2]],[2500,[3]]], spy);
    var clock = this.sandbox.useFakeTimers();

    TimelinePlayer.play();
    equal(spy.callCount, 1);

    clock.tick(500);
    equal(spy.callCount, 2);

    clock.tick(500);
    equal(spy.callCount, 3);

    clock.tick(300);
    TimelinePlayer.pause();

    clock.tick(10000);
    TimelinePlayer.play();

    clock.tick(200);
    equal(spy.callCount, 4);
    TimelinePlayer.stop();

    clock.tick(10000);
    equal(spy.callCount, 4);

    clock.restore();
  });

});
